---
format:
  fundar-revealjs: default

title: 'La cocina de [Argendata](){style="opacity: 0; color: transparent"}'
subtitle: <a href="https://argendata.fund.ar"><picture><source srcset="./argendata-logo-b.svg"><img src="argendata.fund.ar" width="700"></img></picture></a>

authors: 
  - name: Juan Pablo Ruiz Nicolini
    acknowledgements: '[\@tuqmano]()'
    affiliation: Coordinador del Área de Datos
    email: jpruiznicolini@fund.ar

  - name: Joan Imanol Gonzalez Quiroga
    affiliation: Científico de datos
    email: jigonzalezquiroga@fund.ar

---

## Hoja de ruta
::: {.notes}
Fundar (la organizacion); Datos (el equipo); Argendata (la cocina); QA; ETL; T (La segunda **T**)
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Hoja de ruta</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.incremental}
- **Fundar**
  - **Datos**
    -  Nosotros =\)

- **Argendata** -  la cocina
  - Calidad de datos
  - Proceso ETL
  - _Transformers_
:::

## Fundar
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">La organización</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

<div align='center'>
<picture>
<img src="sobrefundar.png" width=5000 style="border-radius: 20px;"></img>
</picture>
</div>

## Área Datos 
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">El equipo</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

![](datos.png){style="border-radius: 10px;"}

## Área Datos - Nosotros
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Nosotros</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.r-stack}

![](tuq.png){ width=2000 style="border-radius: 10px;"}

![](joan.png){.fragment width=2000 style="border-radius: 10px;"}

:::

## Argendata
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Argendata</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

<video autoplay="true" loop="true" width="2000">
<source src="argendata_preview.mp4">
</video>
<script>
document.querySelector('video').playbackRate = 0.3;
document.querySelector('video').style.borderRadius = '10px';
document.querySelector('video').play();
</script>


[argendata.fund.ar](argendata.fund.ar)

#### Datos curados por especialistas ... 


## GitHub Argendata
::: {.notes}
Argendata cuenta con su propios repositorios abiertos en GitHub, donde se encuentran los datos, scripts y documentación de los mismos.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">GitHub Argendata</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

#### Administrados por nosotros =\)

![](./argendatagithub.png){.absolute top=130 right=80 width=2000}

## Flujo
::: {.notes}
El flujo de los datos fue el siguiente: (1) se recolectan los datos provistos por les investigadores (2) los datos pasan por un control de calidad y cuando están limpios se almacenan (3) simultáneamente se espeja el trabajo que realizaron les investigadores, llevando todo a scripts en R con un formato estandarizado (3.5) de aquí se toman los datos nuevamente cuando haya que actualizarlos (4) los datos son transformados a un formato más regular para ser graficado (ej. "categoria, nombre, valor"), las recetas de las transformaciones son guardadas para ser reproducidas cuando sea necesario (5) los datos graficados van a la web. **PERO...**
:::

<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text"><em>Flujo</em></div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>


::: {.r-stack}

![](simple-sin-loops.svg){.fragment width=1800 .fade-out fragment-index=4}

![](simple.svg){.fragment width=1800 fragment-index=4}

:::

<ul>
::: {.fragment fragment-index=1}
  <li style="color:#7bb5c4;"><span>**CONTROL DE CALIDAD**</span></li>
:::
::: {.fragment fragment-index=2}
  <li style="color:#8d9bff;"><span>**ARMONIZACIÓN DE PROCESOS**</span></li>
:::
::: {.fragment fragment-index=3}
  <li style="color:#ffab40;"><span>**TRANSPARENCIA y REPRODUCIBILIDAD**</span></li>
:::
</ul>

## Flujo... más granular
::: {.notes}
No nos perdamos: la parte superior de este nuevo diagrama es muy parecida a la que vimos antes. La recolección de datos arranca por los datos provistos, que vienen de distintas fuentes. Hay una fase intermedia de _landing_ de los datos: los almacenamos temporalmente en Google Drive para que les investigadores puedan manejarse con mayor facilidad. (No todo el mundo conoce Git/GitHub). Parte de la información que les pedimos almacenar es también _cómo_ extrajeron esos datos. Idealmente en scripts de R/Python, pero finalmente hubo mucho `.txt`. (Aprox 45% txt, 25% R, 18% dofile, 9% Python)
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text"><em>Flujo</em>... más granular</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.r-stack}

![](argendata-flujo-transparente-negro.svg){.fragment width=1700 .fade-out fragment-index=4}

![](flujo-controlcalidad.svg){.fragment width=1700 .fade-in-then-out fragment-index=1}

![](flujo-armonizacion.svg){.fragment width=1737 .fade-in-then-out fragment-index=2}

![](flujo-transparencia.svg){.fragment width=1700 .fade-in-then-out fragment-index=3}

![](argendata-flujo-transparente-negro-focus-data.svg){.fragment width=1700 .fade-in fragment-index=4}

:::

## ¡Datos abiertos!
::: {.notes}
Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">¡Datos abiertos!</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

![](argendatadatatranengithub.png){.absolute left=290 bottom=-60}

## Controles de calidad
::: {.notes}
Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Controles de calidad</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

- Los datos son recolectados según lo hicieron lxs investigadorxs,
- automatizado a través de scripts en _**R**_ (más sobre eso después!)
- Son ~300 fuentes de +100 instituciones distintas.
- Procesadas por distintas personas, que trabajan con distintos conocimientos y herramientas.

¿Cómo hicimos para asegurar la calidad de los datos?

<img src="sankey-variabilidad-datos-entrada.png" width="1800"></img>

## Controles de calidad - Algunos problemas
::: {.notes}
Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Controles de calidad - Algunos problemas</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div> 

::: {.incremental}
- Formatos de entrada
  - Variabilidad en el tipo de archivo (csv, tsv, pdf, estáticos).
  - Variabilidad en el formato CSV (separador, _line terminator_, quoting, punto/coma decimal)

- Almacenamiento
  - Google Drive
- Control de cambios (versiones)
  - GitHub
- Encoding
  - ["Estándares"](./xkcd-standards.png)

    ![](./xkcd-standards.png){width="600"}

:::

## Controles de calidad - Algunos problemas
::: {.notes}
Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Controles de calidad - Algunos problemas</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.incremental}
- Encoding
  - UTF-8, UTF-8-BOM, `chardet` y compañía.
  - Caracteres invisibles
  - Re-encoding
- Nomenclatura de fuentes
- Nomenclatura de regiones geográficas
:::

## Controles de calidad - Haciendo zoom
::: {.notes}
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Controles de calidad - Haciendo zoom</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

![](flujo-qa.svg){width=1800}


## Controles de calidad - Verificadores
::: {.notes}
Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Controles de calidad - Verificadores</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

Verificaciones _paralelas_ + resumen

::: {layout-ncol="2"}

```python
import unittest

class TestStringMethods(unittest.TestCase):

    def test_upper(self):
        self.assertEqual('foo'.upper(), 'FOO')

    def test_isupper(self):
        self.assertTrue('FOO'.isupper())
        self.assertFalse('Foo'.isupper())

    def test_split(self):
        s = 'hello world'
        self.assertEqual(s.split(), ['hello', 'world'])
        with self.assertRaises(TypeError):
            s.split(2)

    def test_fail(self):
      s = 'hello world'
      splitted = s.split()
      self.assertEqual(len(splitted), 3)


```

```java
test_fail (a.TestStringMethods.test_fail) ... FAIL
test_isupper (a.TestStringMethods.test_isupper) ... ok
test_split (a.TestStringMethods.test_split) ... ok
test_upper (a.TestStringMethods.test_upper) ... ok

========================================================
FAIL: test_fail (a.TestStringMethods.test_fail)
--------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 21, in test_fail
    self.assertEqual(len(splitted), 3)
AssertionError: 2 != 3

--------------------------------------------------------
Ran 4 tests in 0.001s

FAILED (failures=1)
```

:::

## Controles de calidad - Verificadores 
::: {.notes}
Las verificaciones se pueden _combinar_ de manera paralela, pero cada verificación sigue su _hilo_ secuencial. Finalmente todas confluyen hacia un resultado final a ser graficado como PDF.
:::
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Controles de calidad - Verificadores</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

Verificaciones _secuenciales_ + resumen

::: {layout-ncol="2"}


```python
from argendata.qa import Verifica

@Verifica["Archivo"]
class ControlCSV:
    a_verificar: str

    def __init__(self, path: str):
        self.a_verificar = path

    def verificacion_encoding(self, a_verificar: str):
        codecs = get_codecs(a_verificar)
        if len(codecs) > 0:
            self.codec = codecs[0][0]
        else:
            self.log.debug(...)
            self.codec = use_chardet(a_verificar)

        if self.codec is None:
            self.codec = 'utf-8'
        return self.codec
```

<img src="qa-tranen.png" width="800"></img>


:::

## ETL & Scripting
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">ETL & Scripting</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.r-stack}

![](uso-fuentes-desigu.png){.fragment width=2000}

![](uso-fuentes-mertra.png){.fragment width=2000}

![](uso-fuentes-precio.png){.fragment width=2000}

![](uso-fuentes-todos.png){.fragment width=2000}

:::


## Normalización del formato de datos: el problema
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Normalización del formato de datos: el problema</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

Veámoslo como un ejemplo. Tomemos el siguiente gráfico:

![](infdes14-webjs.png)

## Normalización del formato de datos: el problema
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Normalización del formato de datos: el problema</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.columns .incremental}

::: {.column}
Su ficha en `data/` es la siguiente:

![](infdes14-ficha.png)
:::

::: {.column .fragment}
Y así se ve el `.csv` original

::: {.fragment}
(no entra en pantalla)
:::

![](infdes14-original.png)
:::

:::

## Normalización del formato de datos: el problema
<!-- Barra superior negra  -->
<div class="top-bar">
  <div class="left"></div>
  <div class="center">
  <div class="left-text">Normalización del formato de datos: el problema</div>
  <div class="logo">
  <img src="./_extensions/fundar/logo_fundar-light.svg"/>
  </div></div><div class="right"></div>
</div>

::: {.columns .incremental}

::: {.column}
Y de alguna manera, ésto ...

![](infdes14-original.png)
:::

::: {.column .fragment}

... se convierte en ésto:

![](infdes14-web.png)
:::

:::